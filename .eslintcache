[{"/Users/ys/Desktop/train-ticket/src/query/index.js":"1","/Users/ys/Desktop/train-ticket/src/index/index.js":"2","/Users/ys/Desktop/train-ticket/src/ticket/index.js":"3","/Users/ys/Desktop/train-ticket/src/order/index.js":"4","/Users/ys/Desktop/train-ticket/src/query/App.jsx":"5","/Users/ys/Desktop/train-ticket/src/index/App.jsx":"6","/Users/ys/Desktop/train-ticket/src/ticket/App.jsx":"7","/Users/ys/Desktop/train-ticket/src/order/App.jsx":"8","/Users/ys/Desktop/train-ticket/src/index/store.js":"9","/Users/ys/Desktop/train-ticket/src/query/store.js":"10","/Users/ys/Desktop/train-ticket/src/ticket/store.js":"11","/Users/ys/Desktop/train-ticket/src/order/store.js":"12","/Users/ys/Desktop/train-ticket/src/query/reducers.js":"13","/Users/ys/Desktop/train-ticket/src/index/reducers.js":"14","/Users/ys/Desktop/train-ticket/src/ticket/reducers.js":"15","/Users/ys/Desktop/train-ticket/src/order/reducers.js":"16","/Users/ys/Desktop/train-ticket/src/index/DepartDate.jsx":"17","/Users/ys/Desktop/train-ticket/src/index/HighSpeed.jsx":"18","/Users/ys/Desktop/train-ticket/src/index/Journey.jsx":"19","/Users/ys/Desktop/train-ticket/src/index/Submit.jsx":"20","/Users/ys/Desktop/train-ticket/src/common/Header.jsx":"21","/Users/ys/Desktop/train-ticket/src/index/actions.js":"22","/Users/ys/Desktop/train-ticket/src/common/CitySelector.jsx":"23","/Users/ys/Desktop/train-ticket/src/common/fp.js":"24","/Users/ys/Desktop/train-ticket/src/common/DateSelector.jsx":"25","/Users/ys/Desktop/train-ticket/src/common/Nav.jsx":"26","/Users/ys/Desktop/train-ticket/src/query/List.jsx":"27","/Users/ys/Desktop/train-ticket/src/query/Bottom.jsx":"28","/Users/ys/Desktop/train-ticket/src/query/constant.js":"29","/Users/ys/Desktop/train-ticket/src/query/actions.js":"30","/Users/ys/Desktop/train-ticket/src/common/useNav.js":"31","/Users/ys/Desktop/train-ticket/src/query/Slider.jsx":"32","/Users/ys/Desktop/train-ticket/src/common/useWinSize.js":"33"},{"size":321,"mtime":1611712010000,"results":"34","hashOfConfig":"35"},{"size":321,"mtime":1611711629000,"results":"36","hashOfConfig":"35"},{"size":321,"mtime":1611712017000,"results":"37","hashOfConfig":"35"},{"size":321,"mtime":1611712029000,"results":"38","hashOfConfig":"35"},{"size":6433,"mtime":1612931090000,"results":"39","hashOfConfig":"35"},{"size":2900,"mtime":1612332242000,"results":"40","hashOfConfig":"35"},{"size":196,"mtime":1611712017000,"results":"41","hashOfConfig":"35"},{"size":196,"mtime":1611712029000,"results":"42","hashOfConfig":"35"},{"size":461,"mtime":1612303505000,"results":"43","hashOfConfig":"35"},{"size":915,"mtime":1612418535000,"results":"44","hashOfConfig":"35"},{"size":234,"mtime":1611712017000,"results":"45","hashOfConfig":"35"},{"size":234,"mtime":1611712029000,"results":"46","hashOfConfig":"35"},{"size":6589,"mtime":1612947664000,"results":"47","hashOfConfig":"35"},{"size":2563,"mtime":1611728236000,"results":"48","hashOfConfig":"35"},{"size":20,"mtime":1611712017000,"results":"49","hashOfConfig":"35"},{"size":20,"mtime":1611712029000,"results":"50","hashOfConfig":"35"},{"size":949,"mtime":1612324974000,"results":"51","hashOfConfig":"35"},{"size":1016,"mtime":1612331815000,"results":"52","hashOfConfig":"35"},{"size":849,"mtime":1611788340000,"results":"53","hashOfConfig":"35"},{"size":305,"mtime":1612332207000,"results":"54","hashOfConfig":"35"},{"size":597,"mtime":1611728971000,"results":"55","hashOfConfig":"35"},{"size":3768,"mtime":1611816701000,"results":"56","hashOfConfig":"35"},{"size":6436,"mtime":1612317198000,"results":"57","hashOfConfig":"35"},{"size":224,"mtime":1612322150000,"results":"58","hashOfConfig":"35"},{"size":4238,"mtime":1612328668000,"results":"59","hashOfConfig":"35"},{"size":1252,"mtime":1612599671000,"results":"60","hashOfConfig":"35"},{"size":2638,"mtime":1612866154000,"results":"61","hashOfConfig":"35"},{"size":14589,"mtime":1612947497000,"results":"62","hashOfConfig":"35"},{"size":63,"mtime":1612418255000,"results":"63","hashOfConfig":"35"},{"size":5482,"mtime":1612419321000,"results":"64","hashOfConfig":"35"},{"size":667,"mtime":1612599177000,"results":"65","hashOfConfig":"35"},{"size":5862,"mtime":1612948953000,"results":"66","hashOfConfig":"35"},{"size":625,"mtime":1612944444000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"7mtpsa",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ys/Desktop/train-ticket/src/query/index.js",[],["143","144"],"/Users/ys/Desktop/train-ticket/src/index/index.js",[],"/Users/ys/Desktop/train-ticket/src/ticket/index.js",[],"/Users/ys/Desktop/train-ticket/src/order/index.js",[],"/Users/ys/Desktop/train-ticket/src/query/App.jsx",["145","146","147"],"import React, { useCallback, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport URI from 'urijs';\nimport dayjs from 'dayjs';\nimport { bindActionCreators } from 'redux';\n\nimport { h0 } from '../common/fp';\nimport Header from '../common/Header.jsx';\nimport Nav from '../common/Nav.jsx';\nimport List from './List.jsx';\nimport Bottom from './Bottom.jsx';\nimport useNav from '../common/useNav';\n\nimport {\n    setFrom,\n    setTo,\n    setDepartDate,\n    setHighSpeed,\n    setSearchParsed,\n    setTrainList,\n    setTicketTypes,\n    setTrainTypes,\n    setDepartStations,\n    setArriveStations,\n    prevDate,\n    nextDate,\n    toggleOrderType,\n    toggleHighSpeed,\n    toggleOnlyTickets,\n    toggleIsFiltersVisible,\n    setCheckedTicketTypes,\n    setCheckedTrainTypes,\n    setCheckedDepartStations,\n    setCheckedArriveStations,\n    setDepartTimeStart,\n    setDepartTimeEnd,\n    setArriveTimeStart,\n    setArriveTimeEnd,\n} from './actions';\n\nimport './App.css';\n\nfunction App(props) {\n\tconst {\n\t    trainList,\n\t    from,\n\t    to,\n\t    departDate,\n\t    highSpeed,\n\t    searchParsed,\n\t    dispatch,\n\t    orderType,\n\t    onlyTickets,\n\t    isFiltersVisible,\n\t    ticketTypes,\n\t    trainTypes,\n\t    departStations,\n\t    arriveStations,\n\t    checkedTicketTypes,\n\t    checkedTrainTypes,\n\t    checkedDepartStations,\n\t    checkedArriveStations,\n\t    departTimeStart,\n\t    departTimeEnd,\n\t    arriveTimeStart,\n\t    arriveTimeEnd,\n\t} = props;\n\n\tuseEffect(() => {\n\t    const queries = URI.parseQuery(window.location.search);\n\n\t    const { from, to, date, highSpeed } = queries;\n\n\t    dispatch(setFrom(from));\n\t    dispatch(setTo(to));\n\t    dispatch(setDepartDate(h0(dayjs(date).valueOf())));\n\t    dispatch(setHighSpeed(highSpeed === 'true'));\n\n\t    dispatch(setSearchParsed(true));\n\t}, []);\n\n\tuseEffect(() => {\n        if (!searchParsed) {\n            return;\n        }\n\n        const url = new URI('/rest/query')\n            .setSearch('from', from)\n            .setSearch('to', to)\n            .setSearch('date', dayjs(departDate).format('YYYY-MM-DD'))\n            .setSearch('highSpeed', highSpeed)\n            .setSearch('orderType', orderType)\n            .setSearch('onlyTickets', onlyTickets)\n            .setSearch(\n                'checkedTicketTypes',\n                Object.keys(checkedTicketTypes).join()\n            )\n            .setSearch(\n                'checkedTrainTypes',\n                Object.keys(checkedTrainTypes).join()\n            )\n            .setSearch(\n                'checkedDepartStations',\n                Object.keys(checkedDepartStations).join()\n            )\n            .setSearch(\n                'checkedArriveStations',\n                Object.keys(checkedArriveStations).join()\n            )\n            .setSearch('departTimeStart', departTimeStart)\n            .setSearch('departTimeEnd', departTimeEnd)\n            .setSearch('arriveTimeStart', arriveTimeStart)\n            .setSearch('arriveTimeEnd', arriveTimeEnd)\n            .toString();\n\n        fetch(url)\n            .then(response => response.json())\n            .then(result => {\n                const {\n                    dataMap: {\n                        directTrainInfo: {\n                            trains,\n                            filter: {\n                                ticketType,\n                                trainType,\n                                depStation,\n                                arrStation,\n                            },\n                        },\n                    },\n                } = result;\n\n                dispatch(setTrainList(trains));\n                dispatch(setTicketTypes(ticketType));\n                dispatch(setTrainTypes(trainType));\n                dispatch(setDepartStations(depStation));\n                dispatch(setArriveStations(arrStation));\n            });\n    }, [\n        from,\n        to,\n        departDate,\n        highSpeed,\n        searchParsed,\n        orderType,\n        onlyTickets,\n        checkedTicketTypes,\n        checkedTrainTypes,\n        checkedDepartStations,\n        checkedArriveStations,\n        departTimeStart,\n        departTimeEnd,\n        arriveTimeStart,\n        arriveTimeEnd,\n    ]);\n\n\tconst onBack = useCallback(() => {\n        window.history.back();\n    }, []);\n\n    const { isPrevDisabled, isNextDisabled, prev, next } = useNav(\n        departDate,\n        dispatch,\n        prevDate,\n        nextDate\n    );\n\n    const bottomCbs = useMemo(() => {\n        return bindActionCreators(\n            {\n                toggleOrderType,\n                toggleHighSpeed,\n                toggleOnlyTickets,\n                toggleIsFiltersVisible,\n                setCheckedTicketTypes,\n                setCheckedTrainTypes,\n                setCheckedDepartStations,\n                setCheckedArriveStations,\n                setDepartTimeStart,\n                setDepartTimeEnd,\n                setArriveTimeStart,\n                setArriveTimeEnd,\n            },\n            dispatch\n        );\n    }, []);\n\n\tif (!searchParsed) {\n        return null;\n    }\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"header-wrapper\">\n          <Header title={`${from} ⇀ ${to}`} onBack={onBack} />\n      </div>\n\t\t\t<Nav \n                date={departDate}\n                isPrevDisabled={isPrevDisabled}\n                isNextDisabled={isNextDisabled}\n                prev={prev}\n                next={next}\n            />\n\t\t\t<List list={trainList}/>\n\t\t\t<Bottom \n                highSpeed={highSpeed}\n                orderType={orderType}\n                onlyTickets={onlyTickets}\n                isFiltersVisible={isFiltersVisible}\n                ticketTypes={ticketTypes}\n                trainTypes={trainTypes}\n                departStations={departStations}\n                arriveStations={arriveStations}\n                checkedTicketTypes={checkedTicketTypes}\n                checkedTrainTypes={checkedTrainTypes}\n                checkedDepartStations={checkedDepartStations}\n                checkedArriveStations={checkedArriveStations}\n                departTimeStart={departTimeStart}\n                departTimeEnd={departTimeEnd}\n                arriveTimeStart={arriveTimeStart}\n                arriveTimeEnd={arriveTimeEnd}\n                {...bottomCbs}\n            />\n\t\t</div>\n\t)\n}\n\nexport default connect(\n\tfunction mapStateToProps(state) {\n\t\treturn state;\n\t},\n\tfunction mapDispatchToProps(dispatch) {\n\t\treturn {\n\t\t\tdispatch\n\t\t};\n\t}\n)(App);","/Users/ys/Desktop/train-ticket/src/index/App.jsx",["148","149","150","151","152","153"],"import React, { \n\tuseCallback,\n\tuseMemo \n} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport Header from '../common/Header.jsx'\nimport DepartDate from './DepartDate.jsx'\nimport HighSpeed from './HighSpeed.jsx'\nimport Journey from './Journey.jsx'\nimport Submit from './Submit.jsx'\n\nimport CitySelector from '../common/CitySelector.jsx';\nimport DateSelector from '../common/DateSelector.jsx';\n\nimport { h0 } from '../common/fp';\n\nimport {\n\texchangeFromTo,\n\tshowCitySelector,\n\thideCitySelector,\n\tfetchCityData,\n\tsetSelectedCity,\n\tshowDateSelector,\n\thideDateSelector,\n\tsetDepartDate,\n\ttoggleHighSpeed,\n} from './actions'\n\nfunction App(props) {\n\tconst {\n\t\tfrom,\n\t\tto,\n\t\tisCitySelectorVisible,\n\t\tisDateSelectorVisible,\n\t\tcityData,\n\t\tisLoadingCityData,\n\t\thighSpeed,\n\t\tdispatch,\n\t\tdepartDate,\n\t} = props;\n\n\tconst onBack = useCallback(() => {\n\t\twindow.history.back();\n\t},[]);\n\n\tconst cbs = useMemo(() => {\n\t\treturn bindActionCreators({\n\t\t\texchangeFromTo,\n\t\t\tshowCitySelector\n\t\t}, dispatch);\n\t},[]);\n\n\tconst citySelectorCbs = useMemo(() => {\n        return bindActionCreators(\n            {\n                onBack: hideCitySelector,\n                fetchCityData,\n                onSelect: setSelectedCity,\n            },\n            dispatch\n        );\n    }, []);\n\n\tconst departDateCbs = useMemo(() => {\n        return bindActionCreators(\n            {\n                onClick: showDateSelector,\n            },\n            dispatch\n        );\n    }, []);\n\n\tconst dateSelectorCbs = useMemo(() => {\n        return bindActionCreators(\n            {\n                onBack: hideDateSelector,\n            },\n            dispatch\n        );\n    }, []);\n\n\tconst highSpeedCbs = useMemo(() => {\n        return bindActionCreators(\n            {\n                toggle: toggleHighSpeed,\n            },\n            dispatch\n        );\n    }, []);\n\n\tconst onSelectDate = useCallback((day) => {\n\t\tif(!day) {\n\t\t\treturn;\n\t\t}\n\t\tif (day < h0()) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(setDepartDate(day));\n\t\tdispatch(hideDateSelector());\n\t},[]);\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"header-wrapper\">\n\t\t\t\t<Header title=\"Train Ticket\" onBack={onBack}/>\n\t\t\t</div>\n\t\t\t<form action=\"./query.html\" className=\"form\">\n\t\t\t\t<Journey \n\t\t\t\t\tfrom={from} \n\t\t\t\t\tto={to}\n\t\t\t\t\t{...cbs}\n\t\t\t\t/>\n\t\t\t\t<DepartDate\n\t\t\t\t\ttime={departDate}\n\t\t\t\t\t{...departDateCbs}\n\t\t\t\t/>\n\t\t\t\t<HighSpeed\n\t\t\t\thighSpeed={highSpeed} \n\t\t\t\t\t{...highSpeedCbs}\n\t\t\t\t/>\n\t\t\t\t<Submit/>\n\t\t\t</form>\n\t\t\t<CitySelector\n\t\t\t\tshow={isCitySelectorVisible}\n\t\t\t\tcityData={cityData}\n\t\t\t\tisLoading={isLoadingCityData}\n\t\t\t\t{...citySelectorCbs}\n\t\t\t/>\n\t\t\t<DateSelector \n\t\t\t\tshow={isDateSelectorVisible}\n\t\t\t\t{...dateSelectorCbs}\n\t\t\t\tonSelect={onSelectDate}\n\t\t\t/>\n\t\t</div>\n\n\t);\n\n}\n\nexport default connect(\n\tfunction mapStateToProps(state) {\n\t\treturn state;\n\t},\n\tfunction mapDispatchToProps(dispatch) {\n\t\treturn { dispatch };\n\t}\n)(App);","/Users/ys/Desktop/train-ticket/src/ticket/App.jsx",[],"/Users/ys/Desktop/train-ticket/src/order/App.jsx",[],"/Users/ys/Desktop/train-ticket/src/index/store.js",[],"/Users/ys/Desktop/train-ticket/src/query/store.js",[],"/Users/ys/Desktop/train-ticket/src/ticket/store.js",[],"/Users/ys/Desktop/train-ticket/src/order/store.js",[],"/Users/ys/Desktop/train-ticket/src/query/reducers.js",["154"],"import {\n    ACTION_SET_FROM,\n    ACTION_SET_TO,\n    ACTION_SET_DEPART_DATE,\n    ACTION_SET_HIGH_SPEED,\n    ACTION_SET_TRAIN_LIST,\n    ACTION_SET_ORDER_TYPE,\n    ACTION_SET_ONLY_TICKETS,\n    ACTION_SET_TICKET_TYPES,\n    ACTION_SET_CHECKED_TICKET_TYPES,\n    ACTION_SET_TRAIN_TYPES,\n    ACTION_SET_CHECKED_TRAIN_TYPES,\n    ACTION_SET_DEPART_STATIONS,\n    ACTION_SET_CHECKED_DEPART_STATIONS,\n    ACTION_SET_ARRIVE_STATIONS,\n    ACTION_SET_CHECKED_ARRIVE_STATIONS,\n    ACTION_SET_DEPART_TIME_START,\n    ACTION_SET_DEPART_TIME_END,\n    ACTION_SET_ARRIVE_TIME_START,\n    ACTION_SET_ARRIVE_TIME_END,\n    ACTION_SET_IS_FILTERS_VISIBLE,\n    ACTION_SET_SEARCH_PARSED,\n} from './actions';\nimport { ORDER_DEPART } from './constant';\n\nexport default {\n    from(state = null, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_FROM:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    to(state = null, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_TO:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    departDate(state = Date.now(), action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_DEPART_DATE:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    highSpeed(state = false, action) {\n        const { type, payload } = action;\n        let checkedTrainTypes;\n\n        switch (type) {\n            case ACTION_SET_HIGH_SPEED:\n                return payload;\n            case ACTION_SET_CHECKED_TRAIN_TYPES:\n                checkedTrainTypes = payload;\n                return Boolean(checkedTrainTypes[1] && checkedTrainTypes[5]);\n            default:\n        }\n\n        return state;\n    },\n    trainList(state = [], action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_TRAIN_LIST:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    orderType(state = ORDER_DEPART, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_ORDER_TYPE:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    onlyTickets(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_ONLY_TICKETS:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    ticketTypes(state = [], action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_TICKET_TYPES:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    checkedTicketTypes(state = {}, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_CHECKED_TICKET_TYPES:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    trainTypes(state = [], action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_TRAIN_TYPES:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    checkedTrainTypes(state = {}, action) {\n        const { type, payload } = action;\n\n        let highSpeed;\n        let newCheckedTrainTypes;\n\n        switch (type) {\n            case ACTION_SET_CHECKED_TRAIN_TYPES:\n                return payload;\n            case ACTION_SET_HIGH_SPEED:\n                highSpeed = payload;\n                newCheckedTrainTypes = { ...state };\n\n                if (highSpeed) {\n                    newCheckedTrainTypes[1] = true;\n                    newCheckedTrainTypes[5] = true;\n                } else {\n                    delete newCheckedTrainTypes[1];\n                    delete newCheckedTrainTypes[5];\n                }\n\n                return newCheckedTrainTypes;\n            default:\n        }\n\n        return state;\n    },\n    departStations(state = [], action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_DEPART_STATIONS:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    checkedDepartStations(state = {}, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_CHECKED_DEPART_STATIONS:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    arriveStations(state = [], action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_ARRIVE_STATIONS:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    checkedArriveStations(state = {}, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_CHECKED_ARRIVE_STATIONS:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    departTimeStart(state = 0, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_DEPART_TIME_START:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    departTimeEnd(state = 24, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_DEPART_TIME_END:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    arriveTimeStart(state = 0, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_ARRIVE_TIME_START:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    arriveTimeEnd(state = 24, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_ARRIVE_TIME_END:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    isFiltersVisible(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_IS_FILTERS_VISIBLE:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    searchParsed(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_SEARCH_PARSED:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n};","/Users/ys/Desktop/train-ticket/src/index/reducers.js",["155"],"import {\n    ACTION_SET_FROM,\n    ACTION_SET_TO,\n    ACTION_SET_IS_CITY_SELECTOR_VISIBLE,\n    ACTION_SET_CURRENT_SELECTING_LEFT_CITY,\n    ACTION_SET_CITY_DATA,\n    ACTION_SET_IS_LOADING_CITY_DATA,\n    ACTION_SET_IS_DATE_SELECTOR_VISIBLE,\n    ACTION_SET_HIGH_SPEED,\n    ACTION_SET_DEPART_DATE,\n} from './actions';\n\nexport default {\n\tfrom(state = 'Beijing', action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_FROM:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    to(state = 'Shanghai', action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_TO:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    isCitySelectorVisible(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_IS_CITY_SELECTOR_VISIBLE:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    currentSelectingLeftCity(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_CURRENT_SELECTING_LEFT_CITY:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    cityData(state = null, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_CITY_DATA:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    isLoadingCityData(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_IS_LOADING_CITY_DATA:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    isDateSelectorVisible(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_IS_DATE_SELECTOR_VISIBLE:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    highSpeed(state = false, action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_HIGH_SPEED:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n    departDate(state = Date.now(), action) {\n        const { type, payload } = action;\n        switch (type) {\n            case ACTION_SET_DEPART_DATE:\n                return payload;\n            default:\n        }\n\n        return state;\n    },\n\n\n};","/Users/ys/Desktop/train-ticket/src/ticket/reducers.js",["156"],"export default {\n\n};","/Users/ys/Desktop/train-ticket/src/order/reducers.js",["157"],"/Users/ys/Desktop/train-ticket/src/index/DepartDate.jsx",["158","159"],"import React,{\n\tuseMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { h0 } from '../common/fp';\nimport dayjs from 'dayjs'\nimport './DepartDate.css';\n\n\nexport default function DepartDate(props) {\n\tconst  {\n\t\ttime,\n\t\tonClick,\n\t} = props;\n\n\tconst h0OfDepart = h0(time);\n\tconst departDate = new Date(h0OfDepart);\n\n\tconst departDateString = useMemo(()=> {\n\t\treturn dayjs(time).format('YYYY-MM-DD')\n\t},[h0OfDepart]);\n\n\t//should not use memo because h0\n\tconst isToday = h0OfDepart === h0();\n\tconst weekString = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][departDate.getDay()]\n\t\t+ (isToday ? '(Today)' : '');\n\n\n\treturn (\n\t\t<div className=\"depart-date\" onClick={onClick} >\n\t\t\t<input type=\"hidden\" name=\"date\" value={departDateString} />\n\t\t\t{ departDateString } <span className=\"depart-week\">{ weekString }</span>\n\t\t</div>\n\t);\n\n\tDepartDate.propTypes = {\n    time: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n}","/Users/ys/Desktop/train-ticket/src/index/HighSpeed.jsx",[],"/Users/ys/Desktop/train-ticket/src/index/Journey.jsx",[],"/Users/ys/Desktop/train-ticket/src/index/Submit.jsx",[],"/Users/ys/Desktop/train-ticket/src/common/Header.jsx",[],"/Users/ys/Desktop/train-ticket/src/index/actions.js",[],"/Users/ys/Desktop/train-ticket/src/common/CitySelector.jsx",["160"],"import React, { useState, useCallback, useEffect, useMemo, memo } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './CitySelector.css';\n\nconst CityItem = memo(function CityItem(props) {\n    const { name, onSelect } = props;\n\n    return (\n        <li className=\"city-li\" onClick={() => onSelect(name)}>\n            {name}\n        </li>\n    );\n});\n\nCityItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    onSelect: PropTypes.func.isRequired,\n};\n\nconst CitySection = memo(function CitySection(props) {\n    const { title, cities = [], onSelect } = props;\n\n    return (\n        <ul className=\"city-ul\" data-cate={title}>\n            <li className=\"city-li\" key=\"title\">\n                {title}\n            </li>\n            {cities.map(city => {\n                return (\n                    <CityItem\n                        key={city.name}\n                        name={city.name}\n                        onSelect={onSelect}\n                    />\n                );\n            })}\n        </ul>\n    );\n});\n\nCitySection.propTypes = {\n    title: PropTypes.string.isRequired,\n    cities: PropTypes.array,\n    onSelect: PropTypes.func.isRequired,\n};\n\nconst AlphaIndex = memo(function AlphaIndex(props) {\n  const {\n    alpha,\n    onClick,\n  } = props;\n\n  return (\n    <i className=\"city-index-item\" onClick={()=>onClick(alpha)}>\n      { alpha }\n    </i>\n  );\n});\n\nAlphaIndex.propTypes = {\n    alpha: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n\nconst alphabet = Array.from(new Array(26), (ele, index) => {\n  return String.fromCharCode(65 + index);\n});\n\nconst CityList = memo(function CityList(props) {\n  const {\n    sections,\n    onSelect,\n    toAlpha,\n  } = props;\n\n  return (\n    <div className=\"city-list\">\n      <div className=\"city-cate\">\n      {\n        sections.map(section => {\n          return (\n            <CitySection\n              key={section.title}\n              title={section.title}\n              cities={section.citys}\n              onSelect={onSelect}\n            />\n          );\n        })\n      }\n      </div>\n      <div className=\"city-index\">\n      {\n        alphabet.map(alpha => {\n          return (\n            <AlphaIndex \n              key={alpha} \n              alpha={alpha} \n              onClick={toAlpha}\n            />\n          );\n        })\n      }\n      </div>\n    </div>\n  );\n});\n\nCityList.propTypes = {\n    sections: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    toAlpha: PropTypes.func.isRequired,\n};\n\nconst SuggestItem = memo(function SuggestItem(props) {\n    const { name, onClick } = props;\n\n    return (\n        <li className=\"city-suggest-li\" onClick={() => onClick(name)}>\n            {name}\n        </li>\n    );\n});\n\nSuggestItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n\nconst Suggest = memo(function Suggest(props) {\n    const { searchKey, onSelect } = props;\n\n    const [result, setResult] = useState([]);\n\n    useEffect(() => {\n        fetch('/rest/search?key=' + encodeURIComponent(searchKey))\n            .then(res => res.json())\n            .then(data => {\n                const { result, searchKey: sKey } = data;\n\n                if (sKey === searchKey) {\n                    setResult(result);\n                }\n            });\n    }, [searchKey]);\n\n    const fallBackResult = useMemo(() => {\n        if (!result.length) {\n            return [\n                {\n                    display: searchKey,\n                },\n            ];\n        }\n\n        return result;\n    }, [result, searchKey]);\n\n    return (\n        <div className=\"city-suggest\">\n            <ul className=\"city-suggest-ul\">\n                {fallBackResult.map(item => {\n                    return (\n                        <SuggestItem\n                            key={item.display}\n                            name={item.display}\n                            onClick={onSelect}\n                        />\n                    );\n                })}\n            </ul>\n        </div>\n    );\n});\n\nSuggest.propTypes = {\n    searchKey: PropTypes.string.isRequired,\n    onSelect: PropTypes.func.isRequired,\n};\n\nconst CitySelector = memo(function CitySelector(props) {\n\tconst {\n\t\tshow,\n    cityData,\n    isLoading,\n    onBack,\n    fetchCityData,\n    onSelect,\n\t} = props;\n\n\tconst [searchKey, setSearchKey] = useState('');\n\n\tconst key = useMemo(() => searchKey.trim(), [searchKey]);\n\n\tuseEffect(() => {\n        if (!show || cityData || isLoading) {\n            return;\n        }\n\n        fetchCityData();\n    }, [show, cityData, isLoading]); \n\n  const toAlpha = useCallback(alpha => {\n    document.querySelector(`[data-cate='${alpha}']`)\n      .scrollIntoView();\n  },[]);\n\n  const outputCitySections = () => {\n    if (isLoading) {\n      return <div>loading</div>\n    }\n    if (cityData) {\n      return (\n        <CityList\n          sections={cityData.cityList}\n          onSelect={onSelect}\n          toAlpha={toAlpha}\n        />\n      );\n    }\n\n    return <div>error</div>;\n  }\n\n\treturn (\n\t\t<div className={classnames('city-selector', { hidden: !show })}>\n\t\t\t<div className=\"city-search\">\n\t\t\t\t<div className=\"search-back\" onClick={() => onBack()}>\n            <svg width=\"42\" height=\"42\">\n                <polyline\n                  points=\"25,13 16,21 25,29\"\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                  fill=\"none\"\n                />\n            </svg>\n        </div>\n        <div className=\"search-input-wrapper\">\n          <input\n              type=\"text\"\n              value={searchKey}\n              className=\"search-input\"\n              placeholder=\"City Pinyin\"\n              onChange={e => setSearchKey(e.target.value)}\n          />\n      \t</div>\n      \t<i\n\t        onClick={() => setSearchKey('')}\n\t        className={classnames('search-clean', {\n\t            hidden: key.length === 0,\n\t        })}\n\t      >\n\t       &#xf063;\n        </i>\n\n\n\t\t\t</div>\n      {Boolean(key) && (\n                <Suggest searchKey={key} onSelect={key => onSelect(key)} />\n      )}\n      { outputCitySections() }\n\t\t</div>\n\t);\n});\n\nCitySelector.propTypes = {\n    show: PropTypes.bool.isRequired,\n    cityData: PropTypes.object,\n    isLoading: PropTypes.bool.isRequired,\n    onBack: PropTypes.func.isRequired,\n    fetchCityData: PropTypes.func.isRequired,\n    onSelect: PropTypes.func.isRequired,\n\n};\n\nexport default CitySelector;","/Users/ys/Desktop/train-ticket/src/common/fp.js",[],"/Users/ys/Desktop/train-ticket/src/common/DateSelector.jsx",[],"/Users/ys/Desktop/train-ticket/src/common/Nav.jsx",[],"/Users/ys/Desktop/train-ticket/src/query/List.jsx",[],"/Users/ys/Desktop/train-ticket/src/query/Bottom.jsx",[],"/Users/ys/Desktop/train-ticket/src/query/constant.js",[],"/Users/ys/Desktop/train-ticket/src/query/actions.js",[],"/Users/ys/Desktop/train-ticket/src/common/useNav.js",["161","162"],"import { useCallback } from 'react';\nimport { h0 } from './fp';\n\nexport default function useNav(departDate, dispatch, prevDate, nextDate) {\n    const isPrevDisabled = h0(departDate) <= h0();\n    const isNextDisabled = h0(departDate) - h0() > 20 * 86400 * 1000;\n\n    const prev = useCallback(() => {\n        if (isPrevDisabled) {\n            return;\n        }\n        dispatch(prevDate());\n    }, [isPrevDisabled]);\n\n    const next = useCallback(() => {\n        if (isNextDisabled) {\n            return;\n        }\n        dispatch(nextDate());\n    }, [isNextDisabled]);\n\n    return {\n        isPrevDisabled,\n        isNextDisabled,\n        prev,\n        next,\n    };\n}","/Users/ys/Desktop/train-ticket/src/query/Slider.jsx",["163","164"],"/Users/ys/Desktop/train-ticket/src/common/useWinSize.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":80,"column":5,"nodeType":"171","endLine":80,"endColumn":7,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"170","line":139,"column":8,"nodeType":"171","endLine":155,"endColumn":6,"suggestions":"173"},{"ruleId":"169","severity":1,"message":"174","line":186,"column":8,"nodeType":"171","endLine":186,"endColumn":10,"suggestions":"175"},{"ruleId":"169","severity":1,"message":"174","line":54,"column":4,"nodeType":"171","endLine":54,"endColumn":6,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"174","line":65,"column":8,"nodeType":"171","endLine":65,"endColumn":10,"suggestions":"177"},{"ruleId":"169","severity":1,"message":"174","line":74,"column":8,"nodeType":"171","endLine":74,"endColumn":10,"suggestions":"178"},{"ruleId":"169","severity":1,"message":"174","line":83,"column":8,"nodeType":"171","endLine":83,"endColumn":10,"suggestions":"179"},{"ruleId":"169","severity":1,"message":"174","line":92,"column":8,"nodeType":"171","endLine":92,"endColumn":10,"suggestions":"180"},{"ruleId":"169","severity":1,"message":"181","line":103,"column":4,"nodeType":"171","endLine":103,"endColumn":6,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":26,"column":1,"nodeType":"185","endLine":259,"endColumn":3},{"ruleId":"183","severity":1,"message":"184","line":13,"column":1,"nodeType":"185","endLine":106,"endColumn":3},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","endLine":3,"endColumn":3},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","endLine":3,"endColumn":3},{"ruleId":"169","severity":1,"message":"186","line":21,"column":4,"nodeType":"171","endLine":21,"endColumn":16,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":35,"column":2,"nodeType":"190","messageId":"191","endLine":38,"endColumn":3},{"ruleId":"169","severity":1,"message":"192","line":202,"column":8,"nodeType":"171","endLine":202,"endColumn":35,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"194","line":13,"column":8,"nodeType":"171","endLine":13,"endColumn":24,"suggestions":"195"},{"ruleId":"169","severity":1,"message":"196","line":20,"column":8,"nodeType":"171","endLine":20,"endColumn":24,"suggestions":"197"},{"ruleId":"169","severity":1,"message":"198","line":162,"column":8,"nodeType":"171","endLine":162,"endColumn":20,"suggestions":"199"},{"ruleId":"169","severity":1,"message":"200","line":166,"column":8,"nodeType":"171","endLine":166,"endColumn":18,"suggestions":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["204"],["205"],"React Hook useMemo has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["206"],["207"],["208"],["209"],["210"],["211"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["212"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useMemo has a missing dependency: 'time'. Either include it or remove the dependency array.",["213"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'fetchCityData'. Either include it or remove the dependency array.",["214"],"React Hook useCallback has missing dependencies: 'dispatch' and 'prevDate'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["215"],"React Hook useCallback has missing dependencies: 'dispatch' and 'nextDate'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],"React Hook useEffect has a missing dependency: 'onStartChanged'. Either include it or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'onEndChanged'. Either include it or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"219","fix":"223"},{"desc":"219","fix":"224"},{"desc":"219","fix":"225"},{"desc":"219","fix":"226"},{"desc":"219","fix":"227"},{"desc":"219","fix":"228"},{"desc":"219","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [dispatch]",{"range":"242","text":"243"},"Update the dependencies array to be: [from, to, departDate, highSpeed, searchParsed, orderType, onlyTickets, checkedTicketTypes, checkedTrainTypes, checkedDepartStations, checkedArriveStations, departTimeStart, departTimeEnd, arriveTimeStart, arriveTimeEnd, dispatch]",{"range":"244","text":"245"},{"range":"246","text":"243"},{"range":"247","text":"243"},{"range":"248","text":"243"},{"range":"249","text":"243"},{"range":"250","text":"243"},{"range":"251","text":"243"},{"range":"252","text":"243"},"Update the dependencies array to be: [time]",{"range":"253","text":"254"},"Update the dependencies array to be: [show, cityData, isLoading, fetchCityData]",{"range":"255","text":"256"},"Update the dependencies array to be: [dispatch, isPrevDisabled, prevDate]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, isNextDisabled, nextDate]",{"range":"259","text":"260"},"Update the dependencies array to be: [onStartChanged, startHours]",{"range":"261","text":"262"},"Update the dependencies array to be: [endHours, onEndChanged]",{"range":"263","text":"264"},[1794,1796],"[dispatch]",[3840,4187],"[from, to, departDate, highSpeed, searchParsed, orderType, onlyTickets, checkedTicketTypes, checkedTrainTypes, checkedDepartStations, checkedArriveStations, departTimeStart, departTimeEnd, arriveTimeStart, arriveTimeEnd, dispatch]",[5002,5004],[1060,1062],[1326,1328],[1517,1519],[1709,1711],[1897,1899],[2078,2080],[412,424],"[time]",[4591,4618],"[show, cityData, isLoading, fetchCityData]",[396,412],"[dispatch, isPrevDisabled, prevDate]",[550,566],"[dispatch, isNextDisabled, nextDate]",[4322,4334],"[onStartChanged, startHours]",[4399,4409],"[endHours, onEndChanged]"]